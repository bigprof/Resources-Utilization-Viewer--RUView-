<?php

// Data functions for table assignments

// This script and data application were generated by AppGini 4.70
// Download AppGini for free from http://bigprof.com/appgini/download/

function assignments_insert(){
	global $Translation;

	if($_GET['insert_x']!=''){$_POST=$_GET;}

	// mm: can member insert record?
	$arrPerm=getTablePermissions('assignments');
	if(!$arrPerm[1]){
		return 0;
	}

	$data['ProjectId'] = makeSafe($_POST['ProjectId']);
	$data['ProjectDuration'] = makeSafe($_POST['ProjectId']);
	$data['ResourceId'] = makeSafe($_POST['ResourceId']);
	$data['Commitment'] = makeSafe($_POST['Commitment']);
	$data['StartDate'] = makeSafe($_POST['StartDateYear']) . '-' . makeSafe($_POST['StartDateMonth']) . '-' . makeSafe($_POST['StartDateDay']);
	$data['StartDate'] = parseMySQLDate($data['StartDate'], '');
	$data['EndDate'] = makeSafe($_POST['EndDateYear']) . '-' . makeSafe($_POST['EndDateMonth']) . '-' . makeSafe($_POST['EndDateDay']);
	$data['EndDate'] = parseMySQLDate($data['EndDate'], '');
	if($data['Commitment'] == '') $data['Commitment'] = "1.00";
	if($data['Commitment']== ''){
		echo StyleSheet() . "\n\n<div class=\"Error\">" . $Translation['error:'] . " 'Commitment': " . $Translation['field not null'] . '<br /><br />';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: assignments_before_insert
	if(function_exists('assignments_before_insert')){
		$args=array();
		if(!assignments_before_insert($data, getMemberInfo(), $args)){ return FALSE; }
	}

	$o=array('silentErrors' => true);
	sql('insert into `assignments` set `ProjectId`=' . (($data['ProjectId'] != '') ? "'{$data['ProjectId']}'" : 'NULL') . ', `ProjectDuration`=' . (($data['ProjectDuration'] != '') ? "'{$data['ProjectDuration']}'" : 'NULL') . ', `ResourceId`=' . (($data['ResourceId'] != '') ? "'{$data['ResourceId']}'" : 'NULL') . ', `Commitment`=' . (($data['Commitment'] != '') ? "'{$data['Commitment']}'" : 'NULL') . ', `StartDate`=' . (($data['StartDate'] != '') ? "'{$data['StartDate']}'" : 'NULL') . ', `EndDate`=' . (($data['EndDate'] != '') ? "'{$data['EndDate']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"assignments_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}
	
	$recID=mysql_insert_id();

	// hook: assignments_after_insert
	if(function_exists('assignments_after_insert')){
		$data['selectedID']=$recID;
		$args=array();
		if(!assignments_after_insert($data, getMemberInfo(), $args)){ return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID); }
	}

	// mm: save ownership data
	sql("insert into membership_userrecords set tableName='assignments', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'", $eo);

	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function assignments_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('assignments');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='assignments' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='assignments' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return FALSE;
	}

	// hook: assignments_before_delete
	if(function_exists('assignments_before_delete')){
		$args=array();
		if(!assignments_before_delete($selected_id, $skipChecks, getMemberInfo(), $args)){ return FALSE; }
	}

	sql("delete from `assignments` where `Id`='$selected_id'", $eo);

	// hook: assignments_after_delete
	if(function_exists('assignments_after_delete')){
		$args=array();
		assignments_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='assignments' and pkValue='$selected_id'", $eo);
}

function assignments_update($selected_id){
	global $Translation;

	if($_GET['update_x']!=''){$_POST=$_GET;}

	// mm: can member edit record?
	$arrPerm=getTablePermissions('assignments');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='assignments' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='assignments' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return;
	}

	$data['ProjectId'] = makeSafe($_POST['ProjectId']);
	$data['ProjectDuration'] = makeSafe($_POST['ProjectId']);
	$data['ResourceId'] = makeSafe($_POST['ResourceId']);
	$data['Commitment'] = makeSafe($_POST['Commitment']);
	if($data['Commitment']==''){
		echo StyleSheet() . "\n\n<div class=\"Error\">{$Translation['error:']} 'Commitment': {$Translation['field not null']}<br /><br />";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['StartDate'] = makeSafe($_POST['StartDateYear']) . '-' . makeSafe($_POST['StartDateMonth']) . '-' . makeSafe($_POST['StartDateDay']);
	$data['StartDate'] = parseMySQLDate($data['StartDate'], '');
	$data['EndDate'] = makeSafe($_POST['EndDateYear']) . '-' . makeSafe($_POST['EndDateMonth']) . '-' . makeSafe($_POST['EndDateDay']);
	$data['EndDate'] = parseMySQLDate($data['EndDate'], '');
	$data['selectedID']=makeSafe($selected_id);

	// hook: assignments_before_update
	if(function_exists('assignments_before_update')){
		$args=array();
		if(!assignments_before_update($data, getMemberInfo(), $args)){ return FALSE; }
	}

	$o=array('silentErrors' => true);
	sql('update `assignments` set `ProjectId`=' . (($data['ProjectId'] != '') ? "'{$data['ProjectId']}'" : 'NULL') . ', `ProjectDuration`=' . (($data['ProjectDuration'] != '') ? "'{$data['ProjectDuration']}'" : 'NULL') . ', `ResourceId`=' . (($data['ResourceId'] != '') ? "'{$data['ResourceId']}'" : 'NULL') . ', `Commitment`=' . (($data['Commitment'] != '') ? "'{$data['Commitment']}'" : 'NULL') . ', `StartDate`=' . (($data['StartDate'] != '') ? "'{$data['StartDate']}'" : 'NULL') . ', `EndDate`=' . (($data['EndDate'] != '') ? "'{$data['EndDate']}'" : 'NULL') . " where `Id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="assignments_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: assignments_after_update
	if(function_exists('assignments_after_update')){
		$args=array();
		if(!assignments_after_update($data, getMemberInfo(), $args)){ return FALSE; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='assignments' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function assignments_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('assignments');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	// combobox: ProjectId
	$combo_ProjectId = new DataCombo;
	$combo_ProjectId->Query = "SELECT `Id`, `Name` FROM `projects` ORDER BY 2";
	$combo_ProjectId->SelectName = 'ProjectId';
	$combo_ProjectId->ListType = 0;
	// combobox: ResourceId
	$combo_ResourceId = new DataCombo;
	$combo_ResourceId->Query = "SELECT `Id`, `Name` FROM `resources` WHERE `Available`='1' ORDER BY 2";
	$combo_ResourceId->SelectName = 'ResourceId';
	$combo_ResourceId->ListType = 0;
	// combobox: Commitment
	$combo_Commitment = new Combo;
	$combo_Commitment->ListType = 0;
	$combo_Commitment->MultipleSeparator = ', ';
	$combo_Commitment->ListBoxHeight = 10;
	$combo_Commitment->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/assignments.Commitment.csv')){
		$Commitment_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/assignments.Commitment.csv')));
		$combo_Commitment->ListItem = explode('||', convertLegacyOptions($Commitment_data));
		$combo_Commitment->ListData = $combo_Commitment->ListItem;
	}else{
		$combo_Commitment->ListItem = explode('||', convertLegacyOptions("0.25;;0.50;;0.75;;1.00"));
		$combo_Commitment->ListData = $combo_Commitment->ListItem;
	}
	$combo_Commitment->SelectName = 'Commitment';
	$combo_Commitment->AllowNull = false;
	// combobox: StartDate
	$combo_StartDate = new DateCombo;
	$combo_StartDate->DateFormat = "dmy";
	$combo_StartDate->MinYear = 1900;
	$combo_StartDate->MaxYear = 2100;
	$combo_StartDate->DefaultDate = parseMySQLDate('', '');
	$combo_StartDate->MonthNames = $Translation['month names'];
	$combo_StartDate->CSSOptionClass = 'Option';
	$combo_StartDate->CSSSelectedClass = 'SelectedOption';
	$combo_StartDate->NamePrefix = 'StartDate';
	// combobox: EndDate
	$combo_EndDate = new DateCombo;
	$combo_EndDate->DateFormat = "dmy";
	$combo_EndDate->MinYear = 1900;
	$combo_EndDate->MaxYear = 2100;
	$combo_EndDate->DefaultDate = parseMySQLDate('', '');
	$combo_EndDate->MonthNames = $Translation['month names'];
	$combo_EndDate->CSSOptionClass = 'Option';
	$combo_EndDate->CSSSelectedClass = 'SelectedOption';
	$combo_EndDate->NamePrefix = 'EndDate';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='assignments' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='assignments' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `assignments` where `Id`='".makeSafe($selected_id)."'", $eo);
		$row = mysql_fetch_array($res);
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_ProjectId->SelectedData = $row["ProjectId"];
		$combo_ResourceId->SelectedData = $row["ResourceId"];
		$combo_Commitment->SelectedData = $row["Commitment"];
		$combo_StartDate->DefaultDate = $row["StartDate"];
		$combo_EndDate->DefaultDate = $row["EndDate"];
	}else{
		$combo_ProjectId->SelectedText = ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
			if($combo_ProjectId->SelectedText != ''){ $combo_ProjectId->SelectedData=getValueGivenCaption($combo_ProjectId->Query, $combo_ProjectId->SelectedText); }
		$combo_ResourceId->SelectedText = ( $_REQUEST['FilterField'][1]=='4' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
			if($combo_ResourceId->SelectedText != ''){ $combo_ResourceId->SelectedData=getValueGivenCaption($combo_ResourceId->Query, $combo_ResourceId->SelectedText); }
		$combo_Commitment->SelectedText = ( $_REQUEST['FilterField'][1]=='5' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "1.00");
	}
	$combo_ProjectId->Render();
	$combo_ResourceId->Render();
	$combo_Commitment->Render();

	// code for template based detail view forms

	// open the detail view template
	if(($_POST['dvprint_x']!='' || $_GET['dvprint_x']!='') && $selected_id){
		$templateCode=@implode('', @file('./templates/assignments_templateDVP.html'));
		$dvprint=true;
	}else{
		$templateCode=@implode('', @file('./templates/assignments_templateDV.html'));
		$dvprint=false;
	}

	// process form title
	$templateCode=str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	// unique random identifier
	$rnd1=($dvprint ? rand(1000000, 9999999) : '');
	$templateCode=str_replace('<%%RND1%%>', $rnd1, $templateCode);
	// process buttons
	if($arrPerm[1]){ // allow insert?
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button tabindex="2" type="submit" class="positive" id="insert" name="insert_x" value="1" onclick="return assignments_validateData();"><img src="addNew.gif" /> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button tabindex="2" type="submit" class="positive" id="insert" name="insert_x" value="1" onclick="return assignments_validateData();"><img src="addNew.gif" /> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}
	if($selected_id){
		$templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button tabindex="2" type="submit" id="dvprint" name="dvprint_x" value="1" onclick="document.myform.reset(); return true;"><img src="print.gif" /> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button tabindex="2" type="submit" class="positive" id="update" name="update_x" value="1" onclick="return assignments_validateData();"><img src="update.gif" /> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

			// set records to read only if user can't insert new records
			if(!$arrPerm[1]){
				$jsReadOnly.="\n\n\tif(document.getElementsByName('Id').length){ document.getElementsByName('Id')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('ProjectId').length){ var e_ProjectId=document.getElementsByName('ProjectId')[0]; e_ProjectId.disabled=true; e_ProjectId.style.backgroundColor='white'; e_ProjectId.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('ProjectId_caption').length){ var e_ProjectId_caption=document.getElementsByName('ProjectId_caption')[0]; e_ProjectId_caption.disabled=true; e_ProjectId_caption.style.backgroundColor='white'; e_ProjectId_caption.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('ResourceId').length){ var e_ResourceId=document.getElementsByName('ResourceId')[0]; e_ResourceId.disabled=true; e_ResourceId.style.backgroundColor='white'; e_ResourceId.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('ResourceId_caption').length){ var e_ResourceId_caption=document.getElementsByName('ResourceId_caption')[0]; e_ResourceId_caption.disabled=true; e_ResourceId_caption.style.backgroundColor='white'; e_ResourceId_caption.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('Commitment').length){ var e_Commitment=document.getElementsByName('Commitment')[0]; e_Commitment.disabled=true; e_Commitment.style.backgroundColor='white'; e_Commitment.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('StartDate').length){ document.getElementsByName('StartDate')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('StartDateDay').length){ var StartDateDay=document.getElementsByName('StartDateDay')[0]; StartDateDay.disabled=true; StartDateDay.style.backgroundColor='white'; StartDateDay.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('StartDateMonth').length){ var StartDateMonth=document.getElementsByName('StartDateMonth')[0]; StartDateMonth.disabled=true; StartDateMonth.style.backgroundColor='white'; StartDateMonth.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('StartDateYear').length){ var StartDateYear=document.getElementsByName('StartDateYear')[0]; StartDateYear.disabled=true; StartDateYear.style.backgroundColor='white'; StartDateYear.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('EndDate').length){ document.getElementsByName('EndDate')[0].readOnly=true; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('EndDateDay').length){ var EndDateDay=document.getElementsByName('EndDateDay')[0]; EndDateDay.disabled=true; EndDateDay.style.backgroundColor='white'; EndDateDay.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('EndDateMonth').length){ var EndDateMonth=document.getElementsByName('EndDateMonth')[0]; EndDateMonth.disabled=true; EndDateMonth.style.backgroundColor='white'; EndDateMonth.style.color='black'; }\n";
				$jsReadOnly.="\n\n\tif(document.getElementsByName('EndDateYear').length){ var EndDateYear=document.getElementsByName('EndDateYear')[0]; EndDateYear.disabled=true; EndDateYear.style.backgroundColor='white'; EndDateYear.style.color='black'; }\n";

				$noUploads=true;
			}
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button tabindex="2" type="submit" class="negative" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><img src="delete.gif" /> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button tabindex="2" type="submit" id="deselect" name="deselect_x" value="1" onclick="document.myform.reset(); return true;"><img src="deselect.gif" /> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button tabindex="2" type="submit" id="deselect" name="deselect_x" value="1" onclick="document.myform.reset(); return true;"><img src="deselect.gif" /> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(ProjectId)%%>', $combo_ProjectId->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(ProjectId)%%>', $combo_ProjectId->MatchText, $templateCode);
	$templateCode=str_replace('<%%COMBO(ResourceId)%%>', $combo_ResourceId->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(ResourceId)%%>', $combo_ResourceId->MatchText, $templateCode);
	$templateCode=str_replace('<%%COMBO(Commitment)%%>', $combo_Commitment->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(Commitment)%%>', $combo_Commitment->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(StartDate)%%>', $combo_StartDate->GetHTML(), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(StartDate)%%>', $combo_StartDate->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(EndDate)%%>', $combo_EndDate->GetHTML(), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(EndDate)%%>', $combo_EndDate->GetHTML(true), $templateCode);

	// process foreign key links
	if($selected_id){
		$templateCode=str_replace('<%%PLINK(ProjectId)%%>', ($combo_ProjectId->SelectedData ? "<span id=projects_plink1 style=\"visibility: hidden;\"><a href=projects_view.php?SelectedID=".$combo_ProjectId->SelectedData."><img border=0 src=lookup.gif></a></span>" : ''), $templateCode);
		$templateCode=str_replace('<%%PLINK(ResourceId)%%>', ($combo_ResourceId->SelectedData ? "<span id=resources_plink2 style=\"visibility: hidden;\"><a href=resources_view.php?SelectedID=".$combo_ResourceId->SelectedData."><img border=0 src=lookup.gif></a></span>" : ''), $templateCode);
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(Id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(ProjectId)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(ResourceId)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(Commitment)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(StartDate)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(EndDate)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(Id)%%>', htmlspecialchars($row['Id'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(Id)%%>', urlencode($urow['Id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(ProjectId)%%>', htmlspecialchars($row['ProjectId'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ProjectId)%%>', urlencode($urow['ProjectId']), $templateCode);
		$templateCode=str_replace('<%%VALUE(ResourceId)%%>', htmlspecialchars($row['ResourceId'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ResourceId)%%>', urlencode($urow['ResourceId']), $templateCode);
		$templateCode=str_replace('<%%VALUE(Commitment)%%>', htmlspecialchars($row['Commitment'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(Commitment)%%>', urlencode($urow['Commitment']), $templateCode);
		$templateCode=str_replace('<%%VALUE(StartDate)%%>', @date('j/n/Y', @strtotime(htmlspecialchars($row['StartDate'], ENT_QUOTES))), $templateCode);
		$templateCode=str_replace('<%%VALUE(EndDate)%%>', @date('j/n/Y', @strtotime(htmlspecialchars($row['EndDate'], ENT_QUOTES))), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(Id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(Id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(ProjectId)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ProjectId)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(ResourceId)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ResourceId)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(Commitment)%%>', '1.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(Commitment)%%>', urlencode('1.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(StartDate)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(StartDate)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(EndDate)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(EndDate)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!--', $templateCode);
	$templateCode=str_replace('%%>', '-->', $templateCode);

	// hide links to inaccessible tables
	if($_POST['dvprint_x']==''){
		$templateCode.="\n\n<script>\n";
		$arrTables=getTableList();
		foreach($arrTables as $name=>$caption){
			$templateCode.="\tif(document.getElementById('".$name."_link')!=undefined){\n";
			$templateCode.="\t\tdocument.getElementById('".$name."_link').style.visibility='visible';\n";
			$templateCode.="\t}\n";
			for($i=1; $i<10; $i++){
				$templateCode.="\tif(document.getElementById('".$name."_plink$i')!=undefined){\n";
				$templateCode.="\t\tdocument.getElementById('".$name."_plink$i').style.visibility='visible';\n";
				$templateCode.="\t}\n";
			}
		}

		$templateCode.=$jsReadOnly;

		if(!$selected_id){
		}

		$templateCode.="\n</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode.="<script>";
	$templateCode.="document.observe('dom:loaded', function() {";

	$templateCode.="\tProjectIdChanged$rnd1 = function(){\n";
	$templateCode.="\t\tnew Ajax.Request(\n";
	if($dvprint){
		$templateCode.="\t\t\t'assignments_autofill.php?rnd1=$rnd1&mfk=ProjectId&id='+encodeURIComponent('".addslashes($row['ProjectId'])."'),\n";
		$templateCode.="\t\t\t{encoding: 'iso-8859-1', method: 'get'}\n";
	}else{
		$templateCode.="\t\t\t'assignments_autofill.php?rnd1=$rnd1&mfk=ProjectId&id='+encodeURIComponent(\$F('ProjectId')),\n";
		$templateCode.="\t\t\t{encoding: 'iso-8859-1', method: 'get', onCreate: function(){ \$('ProjectId$rnd1').disable(); \$('ProjectIdLoading').innerHTML='<img src=loading.gif align=top>'; }, onComplete: function(){".(($arrPerm[1] || (($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3)) ? "\$('ProjectId$rnd1').enable(); " : "\$('ProjectId$rnd1').disable(); ")."\$('ProjectIdLoading').innerHTML='';}}\n";
	}
	$templateCode.="\t\t);\n";
	$templateCode.="\t};\n";
	$templateCode.="\tProjectIdChanged$rnd1();\n";
	if(!$dvprint) $templateCode.="\t\$('ProjectId$rnd1').onchange=ProjectIdChanged$rnd1;\n";
	if(!$dvprint) $templateCode.="\tif(\$('ProjectId_caption') != undefined) \$('ProjectId_caption').onchange=ProjectIdChanged$rnd1;\n";


	$templateCode.="});";
	$templateCode.="</script>";

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode=preg_replace('/blank.gif" rel="lightbox\[.*?\]"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: assignments_dv
	if(function_exists('assignments_dv')){
		$args=array();
		assignments_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>